# Default values for backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

images:
  nginx:
    name: nginx
    resources:
      requests:
        memory: 64Mi
        cpu: 100m
      limits:
        memory: 128Mi
        cpu: 300m
  app:
    name: app
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 300m

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "360"
  hosts:
    - host: backend-dev.defihelper.info
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: backend-tls
      hosts:
        - backend-dev.defihelper.info

broker:
  process:
    labels:
      app: app
      component: broker
      environment: prod
      queue: process
    queues:
      queue:
        name: queue
        command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run queue:consume -- -q tasks_default"'
        replicas: 1
        maxReplicas: 10
        maxReadyMessagesForHpa: 10
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 500m
      events-trigger:
        name: events-trigger
        command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run trigger:event"'
        replicas: 1
        maxReplicas: 20
        maxReadyMessagesForHpa: 100
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 256Mi
            cpu: 500m
      trigger:
        name: trigger
        command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run queue:consume -- -q tasks_trigger"'
        replicas: 1
        maxReplicas: 20
        maxReadyMessagesForHpa: 100
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 256Mi
            cpu: 500m
      metrics:
        name: metrics
        command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run queue:consume -- -q tasks_metricCurrent"'
        replicas: 1
        maxReplicas: 20
        maxReadyMessagesForHpa: 100
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 256Mi
            cpu: 500m
      history:
        name: history
        command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run queue:consume -- -q tasks_metricHistory"'
        replicas: 1
        maxReplicas: 20
        maxReadyMessagesForHpa: 100
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 256Mi
            cpu: 500m

handlers:
  labels:
    app: backend
    component: cronHandler
    environment: prod
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 128Mi
      cpu: 100m
  schedules:
    queue-deferred:
      command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run queue:deferred"'
      schedule: "* * * * *"

migrator:
  labels:
    app: migrator
    component: migrator
    environment: dev
  resources:
    requests:
      memory: 128Mi
      cpu: 200m
    limits:
      memory: 256Mi
      cpu: 1200m

resources: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: true
  annotations: {}
  name: ""
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
